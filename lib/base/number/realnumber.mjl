struct RealNumber
	field
	data
	RealNumber(field, data) =
		has_lowest_supbound(field) &&
		is_ordered_field(field, +, *, zero(field), one(field)) &&
		wider_in(ℚ, field) &&
		data in field ? new(field, data) : void
end

struct DedekindCutRealNumber
	lower::Set
	higher::Set
	function DedekindCutRealNumber(lower::Set, higher::Set)
		if lower⊆ℚ && higher⊆ℚ && union(lower, higher)==ℚ && !isempty(lower) && !isempty(higher) && max(lower)<min(higher)
			return new(lower, higher)
		else
			error("...")
		end
	end
end

@proof begin # Archimedes性质
	# forall x y in r x>0 (exists n in n nx>y)
end

@proof begin # Q在R中稠密
	;
end
